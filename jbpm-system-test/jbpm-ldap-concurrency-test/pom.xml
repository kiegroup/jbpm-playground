<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jbpm</groupId>
    <artifactId>jbpm-system-test</artifactId>
    <version>7.70.0.Final</version>
  </parent>

  <artifactId>jbpm-ldap-concurrency-test</artifactId>
  
  <name>LDAP concurrency</name>
  <description>System tests for LDAP concurrent access</description>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/drivers</outputDirectory>
              <includeGroupIds>org.postgresql</includeGroupIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>http://raw.githubusercontent.com/kiegroup/jbpm/${version.org.kie}/jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-jbpm-schema.sql</url>
              <outputFileName>postgresql-jbpm-schema.sql</outputFileName>
              <skipCache>true</skipCache>
              <overwrite>true</overwrite>
              <unpack>false</unpack>
              <outputDirectory>${project.build.directory}/postgresql</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- To avoid duplicate key value violates unique constraint "organizationalentity_pkey" exception, it pre-populates db with known user and groups before executing the processes.
           As stated here https://developer.jboss.org/thread/254165: This is considered as limitation and will remain as such because dealing with table locks 
           to avoid this optimistic lock exception is way more difficult and causes huge performance degradation compared to the value gained from it.-->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo file="${project.build.directory}/postgresql/postgresql-jbpm-schema.sql" append="true">
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'process-admin');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'user');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'manager');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'admin');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'kie-server');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'rest-all');
                            insert into OrganizationalEntity (DTYPE, id) values ('Group', 'President');
                            insert into OrganizationalEntity (DTYPE, id) values ('User', 'Administrator');
                </echo>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <properties>
            <configurationParameters>
                junit.jupiter.execution.parallel.enabled = true
                junit.jupiter.execution.parallel.mode.default = concurrent
            </configurationParameters>
          </properties>
          <systemPropertyVariables>
            <org.kie.samples.image>${org.kie.samples.image}</org.kie.samples.image>
            <org.kie.samples.script>${org.kie.samples.script}</org.kie.samples.script>
            <org.kie.samples.server>${org.kie.samples.server}</org.kie.samples.server>
            <org.kie.samples.image.postgresql>postgres:${image.postgresql.version}</org.kie.samples.image.postgresql>
            <org.kie.samples.image.openldap>osixia/openldap:${image.openldap.version}</org.kie.samples.image.openldap>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>kie-server</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <org.kie.samples.image>quay.io/kiegroup/kie-server-showcase:${version.org.kie}</org.kie.samples.image>
        <org.kie.samples.script>start_kie-server.sh</org.kie.samples.script>
        <org.kie.samples.server>kie-server</org.kie.samples.server>
      </properties>
    </profile>
    <profile>
      <id>full</id>
      <properties>
        <org.kie.samples.image>quay.io/kiegroup/jbpm-server-full:${version.org.kie}</org.kie.samples.image>
        <org.kie.samples.script>start_jbpm-wb.sh</org.kie.samples.script>
        <org.kie.samples.server>full</org.kie.samples.server>
      </properties>
    </profile>
  </profiles>
</project>
